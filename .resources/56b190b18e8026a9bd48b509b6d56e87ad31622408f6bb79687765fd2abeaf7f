{
  "custom": {
    "data": {
      "$": [
        "ds",
        192,
        1620596606441
      ],
      "$columns": [
        {
          "data": [],
          "name": "id_metric",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "metric_name",
          "type": "String"
        },
        {
          "data": [],
          "name": "metric_description",
          "type": "String"
        },
        {
          "data": [],
          "name": "metric_equation",
          "type": "String"
        },
        {
          "data": [],
          "name": "metric_units",
          "type": "String"
        },
        {
          "data": [],
          "name": "target",
          "type": "Double"
        },
        {
          "data": [],
          "name": "warning_limit",
          "type": "Double"
        },
        {
          "data": [],
          "name": "danger_limit",
          "type": "Double"
        },
        {
          "data": [],
          "name": "id_metric_group",
          "type": "Integer"
        },
        {
          "data": [],
          "name": "id_site",
          "type": "Integer"
        }
      ]
    }
  },
  "params": {
    "id_group": 1,
    "id_metric": -1,
    "id_site": 1
  },
  "propConfig": {
    "custom.data": {
      "binding": {
        "config": {
          "path": "view.params.id_metric"
        },
        "transforms": [
          {
            "code": "\tid_metric \u003d int(self.params.id_metric)\n\tquery  \u003d \u0027select * from c_metrics where id_metric \u003d ?\u0027\n\tdata \u003d system.db.runPrepQuery(query,[id_metric])\n\tif len(data)!\u003d0:\n\t\tname \u003d data[0][\u0027metric_name\u0027]\n\t\tdescription \u003d data[0][\u0027metric_description\u0027]\n\t\tunits \u003d data[0][\u0027metric_units\u0027]\n\t\ttarget \u003d data[0][\u0027target\u0027]\n\t\twarning \u003d data[0][\u0027warning_limit\u0027]\n\t\tdanger \u003d data[0][\u0027danger_limit\u0027]\n\t\tself.getChild(\"root\").getChild(\"Button_Delete\").position.display \u003d True\n\telse:\n\t\tname \u003d \u0027\u0027\n\t\tdescription \u003d \u0027\u0027\n\t\tunits \u003d \u0027\u0027\n\t\ttarget \u003d 100\n\t\twarning \u003d 90\n\t\tdanger \u003d 80\n\t\tself.getChild(\"root\").getChild(\"Button_Delete\").position.display \u003d False\n\tself.getChild(\"root\").getChild(\"TextField_name\").props.text \u003d name\n\tself.getChild(\"root\").getChild(\"TextArea_description\").props.text \u003d description\n\tself.getChild(\"root\").getChild(\"TextField_units\").props.text \u003d units\n\tself.getChild(\"root\").getChild(\"TextField_Target\").props.text \u003d target\n\tself.getChild(\"root\").getChild(\"TextField_Warning\").props.text \u003d warning\n\tself.getChild(\"root\").getChild(\"TextField_Danger\").props.text \u003d danger\n\treturn data",
            "type": "script"
          }
        ],
        "type": "property"
      },
      "persistent": true
    },
    "params.id_group": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.id_metric": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.id_site": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 496,
      "width": 331
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Label"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Name:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextField_name"
        },
        "position": {
          "basis": "38px"
        },
        "props": {
          "deferUpdates": false
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_0"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Description:"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextArea_description"
        },
        "position": {
          "basis": "74px"
        },
        "props": {
          "deferUpdates": false
        },
        "type": "ia.input.text-area"
      },
      {
        "meta": {
          "name": "Label_1"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Units"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextField_units"
        },
        "position": {
          "basis": "38px"
        },
        "props": {
          "deferUpdates": false
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_3"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Target"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextField_Target"
        },
        "position": {
          "basis": "38px"
        },
        "props": {
          "deferUpdates": false,
          "text": 100
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_4"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Warning Limit"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextField_Warning"
        },
        "position": {
          "basis": "38px"
        },
        "props": {
          "deferUpdates": false,
          "text": 90
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_5"
        },
        "position": {
          "basis": "32px"
        },
        "props": {
          "text": "Danger Limit"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TextField_Danger"
        },
        "position": {
          "basis": "38px"
        },
        "props": {
          "deferUpdates": false,
          "text": 80
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "Label_2"
        },
        "position": {
          "basis": "32px"
        },
        "type": "ia.display.label"
      },
      {
        "children": [
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "script": "\tname \u003d self.parent.parent.getChild(\"TextField_name\").props.text\n\tdescription \u003d self.parent.parent.getChild(\"TextArea_description\").props.text\n\tunits \u003d self.parent.parent.getChild(\"TextField_units\").props.text\n\tid_group \u003d int(self.view.params.id_group)\n\tid_site \u003d int(self.view.params.id_site)\n\ttarget \u003d self.parent.parent.getChild(\"TextField_Target\").props.text\n\twarning \u003d self.parent.parent.getChild(\"TextField_Warning\").props.text\n\tdanger \u003d self.parent.parent.getChild(\"TextField_Danger\").props.text\n\t\n\tid_metric \u003d int(self.view.params.id_metric)\n\tquery  \u003d \u0027select * from c_metrics where id_metric \u003d ?\u0027\n\tdata \u003d system.db.runPrepQuery(query,[id_metric])\n\tif len(data)\u003d\u003d0:\n\t\tquery \u003d \u0027INSERT INTO c_metrics (metric_name,metric_description,metric_units,id_metric_group,id_site,target,warning_limit,danger_limit) VALUES (?,?,?,?,?,?,?,?)\u0027\n\t\tsystem.db.runPrepUpdate(query,[name,description,units,id_group,id_site,target,warning,danger])\t\t\n\telse:\n\t\tquery \u003d \u0027UPDATE c_metrics SET metric_name\u003d?,metric_description\u003d?,metric_units\u003d?,id_metric_group\u003d?,id_site\u003d?,target\u003d?,warning_limit\u003d?,danger_limit\u003d? where id_metric\u003d?\u0027\n\t\tsystem.db.runPrepUpdate(query,[name,description,units,id_group,id_site,target,warning,danger,id_metric])\n\tsystem.perspective.sendMessage(\u0027Refresh\u0027)\n\tsystem.perspective.closePopup(\u0027AddMetric\u0027)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Button"
            },
            "position": {
              "basis": "148px"
            },
            "props": {
              "text": "Guardar"
            },
            "type": "ia.input.button"
          },
          {
            "events": {
              "component": {
                "onActionPerformed": {
                  "config": {
                    "draggable": true,
                    "id": "AddMetric",
                    "modal": false,
                    "overlayDismiss": false,
                    "resizable": true,
                    "showCloseIcon": true,
                    "type": "close",
                    "viewPath": "Popups/AddMetric"
                  },
                  "scope": "C",
                  "type": "popup"
                }
              }
            },
            "meta": {
              "name": "Button_0"
            },
            "position": {
              "basis": "124px"
            },
            "props": {
              "text": "Cancelar"
            },
            "type": "ia.input.button"
          }
        ],
        "meta": {
          "name": "FlexContainer"
        },
        "position": {
          "basis": "44px"
        },
        "props": {
          "justify": "space-between"
        },
        "type": "ia.container.flex"
      },
      {
        "meta": {
          "name": "Label_6"
        },
        "position": {
          "basis": "32px"
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tquery \u003d \u0027delete from c_metrics where id_metric \u003d ?\u0027\n\tid_metric \u003d self.view.params.id_metric\n\tsystem.db.runPrepUpdate(query,[id_metric])\n\tsystem.perspective.closePopup(\u0027AddMetric\u0027)\n\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button_Delete"
        },
        "position": {
          "basis": "40px",
          "display": false
        },
        "props": {
          "primary": false,
          "text": "Delete"
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column",
      "style": {
        "margin": "10px"
      }
    },
    "type": "ia.container.flex"
  }
}